// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package helloworld;

import "google/protobuf/any.proto";

option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";
option objc_class_prefix = "HLW";
option go_package = "github.com/tensorflow/tensorflow/tensorflow/go/core/protobuf/for_core_protos_go_proto";

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}
  rpc SayHello1 (HelloRequest1) returns (HelloReply1) {}
  rpc SayHello2 (HelloRequest2) returns (HelloReply2) {}
  rpc SayHello3 (HelloRequest3) returns (HelloReply3) {}
  rpc SayHello4 (HelloRequest4) returns (HelloReply4) {}
  rpc RecvBuf(RecvBufRequest) returns (RecvBufResponse) {}
}

// The request message containing the user's name.
message HelloRequest {
  bytes name = 1;
  optional bool start_benchmark = 2;
}

// The response message containing the greetings
message HelloReply {
  bytes message = 1;
}


message HelloRequest1 {
  bytes name = 1;
}

message HelloReply1 {
  bytes message = 1;
}


message HelloRequest2 {
  bytes name = 1;
}

message HelloReply2 {
  bytes message = 1;
}

message HelloRequest3 {
  bytes name = 1;
}

message HelloReply3 {
  bytes message = 1;
}

message HelloRequest4 {
}

message HelloReply4 {
  bytes message = 1;
}

message RecvBufRequest {
  int64 num_bytes = 1;
  int64 offset = 2;
  google.protobuf.Any transport_options = 3;
}

message RecvBufResponse {
  fixed64 buf_ptr = 1;
  int64 num_bytes = 2;
  google.protobuf.Any transport_options = 3;
  int64 micros = 4;
}

message RecvBufRespExtra {
  repeated bytes tensor_content = 1;
}