syntax = "proto3";

package microbenchmark;

// The request message containing the user's name.
message SimpleRequest {
  bytes message = 1;
}

// The response message containing the greetings
message SimpleResponse {
  bytes message = 1;
}

service BenchmarkService {
  // One request followed by one response.
  // The server returns the client payload as-is.
  rpc UnaryCall(SimpleRequest) returns (SimpleResponse);

  // Repeated sequence of one request followed by one response.
  // Should be called streaming ping-pong
  // The server returns the client payload as-is on each response
  rpc StreamingCall(stream SimpleRequest) returns (stream SimpleResponse);

  // Single-sided unbounded streaming from client to server
  // The server returns the client payload as-is once the client does WritesDone
  rpc StreamingFromClient(stream SimpleRequest) returns (SimpleResponse);

  // Single-sided unbounded streaming from server to client
  // The server repeatedly returns the client payload as-is
  rpc StreamingFromServer(SimpleRequest) returns (stream SimpleResponse);
}
